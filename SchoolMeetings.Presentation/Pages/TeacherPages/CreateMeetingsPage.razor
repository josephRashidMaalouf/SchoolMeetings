@page "/create-meetings/{SelectedDate}"
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@inject CreateMeetingsViewModel ViewModel
@inject NavigationManager NavigationManager
@inject IAccountManagement Acct
@attribute [Authorize]

<Card class="mb-3">
    <CardHeader class="bg-primary text-light text-center">
        Dina bokningsbara tider
    </CardHeader>
    <CardBody>
        <table class="table table-sm table-hover">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Tid</th>
                    <th scope="col" style="text-align: right; padding-right: 80px;">Redigera</th>

                </tr>
            </thead>
            <tbody>
                <tr>
                    <Virtualize Items="ViewModel.UnBookedMeetings">
                        <td>@context.MeetingStart.ToShortTimeString() - @context.MeetingEnd.ToShortTimeString()</td>
                        <td style="text-align: right;">
                            <Button class="btn-primary">Ändra</Button>
                            <Button class="btn-danger">Ta bort</Button>
                        </td>
                    </Virtualize>
                </tr>
            </tbody>
        </table>
    </CardBody>
    <CardFooter>
        <Button class="btn-primary" @onclick="OnShowModalClick" style="width: 100%;">Lägg till</Button>
    </CardFooter>
</Card>
<Card class="mb-3">
    <CardHeader class="bg-primary text-light text-center">
        Dina bokade tider
    </CardHeader>
    <CardBody>
        <table class="table table-sm table-hover table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Tid</th>
                    <th scope="col">Elevens namn</th>
                    <th scope="col">Vårdnadshavare</th>
                    <th scope="col" style="text-align: center;">Redigera</th>

                </tr>
            </thead>
            <tbody>
                <Virtualize Items="ViewModel.BookedMeetings">
                    <tr>
                        <td>@context.MeetingStart.ToShortTimeString() - @context.MeetingEnd.ToShortTimeString()</td>
                        <td>@context.StudentName</td>
                        <td>
                            @if (context.Parents is not null)
                            {
                                @foreach (var parent in @context.Parents)
                                {
                                    <p style="display: inline;">@parent </p>
                                }
                            }
                        </td>
                        <td style="text-align: center;">
                            <Button class="btn-primary mb-1">Ändra</Button>
                            <Button class="btn-danger">Ta bort</Button>
                        </td>
                    </tr>

                </Virtualize>
            </tbody>
        </table>
    </CardBody>
</Card>

<Modal @ref="addNewMeetingModal" Title="Modal title">
    <BodyTemplate>
        Modal body text goes here.
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Secondary" @onclick="OnHideModalClick">Close</Button>
        <Button Color="ButtonColor.Primary">Save changes</Button>
    </FooterTemplate>
</Modal>


@code {
    [Parameter]
    public string? SelectedDate { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var isAuthenticated = await Acct.CheckAuthenticatedAsync();

        if (isAuthenticated is false)
            NavigationManager.NavigateTo("/");

        if (SelectedDate is not null)
            ViewModel.SelectedDate = DateTime.Parse(SelectedDate);

    }

    @code {
        private Modal addNewMeetingModal;

        private async Task OnShowModalClick()
        {
            await addNewMeetingModal?.ShowAsync();
        }

        private async Task OnHideModalClick()
        {
            await addNewMeetingModal?.HideAsync();
        }
    }

}