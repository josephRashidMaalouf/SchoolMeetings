@inject IAccountManagement Acct
@inject NavigationManager NavigationManager

<PageTitle>Registrera dig</PageTitle>


@if (errors)
{
    @foreach (var error in errorList)
    {
        <div class="alert alert-danger">@error</div>
    }
}
<div class="card p-3 mb-3">
    <div class="mb-3">
        <h1>Skapa ett konto</h1>
    </div>


    <div class="mb-3">
        <InputText @bind-Value="email" id="usernameField" Placeholder="Ange din mailadress" class="form-control mb-3" />
    </div>
    <div class="mb-3">
        <input class="form-control" id="passwordField" type="password" placeholder="Välj ett lösenord" @bind="password" />
    </div><div class="mb-3">
        <input class="form-control" id="passwordFieldConfirm" type="password" placeholder="Bekräfta lösenord" @bind="confirmPassword" />
    </div>
    <div class="mb-3">
        <button class="btn btn-primary" id="loginBtn" @onclick="DoRegisterAsync">Registrera dig</button>
    </div>



</div>



@code {
    private bool success, errors;
    private string email = string.Empty;
    private string password = string.Empty;
    private string confirmPassword = string.Empty;
    private string[] errorList = [];

    public async Task DoRegisterAsync()
    {
        success = errors = false;
        errorList = [];

        if (string.IsNullOrWhiteSpace(email))
        {
            errors = true;
            errorList = ["Email is required."];

            return;
        }

        if (string.IsNullOrWhiteSpace(password))
        {
            errors = true;
            errorList = ["Password is required."];

            return;
        }

        if (string.IsNullOrWhiteSpace(confirmPassword))
        {
            errors = true;
            errorList = ["Please confirm your password."];

            return;
        }

        if (password != confirmPassword)
        {
            errors = true;
            errorList = ["Passwords don't match."];

            return;
        }

        var result = await Acct.RegisterAsync(email, password);

        if (result.Succeeded)
        {
            success = true;
            email = password = confirmPassword = string.Empty;
        }
        else
        {
            errors = true;
            errorList = result.ErrorList;
        }
    }
}