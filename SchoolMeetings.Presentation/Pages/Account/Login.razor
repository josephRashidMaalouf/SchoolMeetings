@inject IAccountManagement Acct
@inject NavigationManager NavigationManager

<PageTitle>Logga in</PageTitle>

<AuthorizeView>
    <Authorized>
        <div class="alert alert-success">You're logged in as @context.User.Identity?.Name.</div>
    </Authorized>
    <NotAuthorized>
        @if (errors)
        {
            @foreach (var error in errorList)
            {
                <div class="alert alert-danger">@error</div>
            }
        }
        <div class="card p-3 mb-3">
            <div class="mb-3">
                <h1>Logga in</h1>
            </div>


            <div class="mb-3">
                <InputText @bind-Value="email" id="usernameField" Placeholder="Användarnamn" class="form-control mb-3" />
            </div>
            <div class="mb-3">
                <input class="form-control" id="passwordField" type="password" placeholder="Lösenord" @bind="password" />
            </div>
            <div class="mb-3">
                <button class="btn btn-primary" id="loginBtn" @onclick="DoLoginAsync">Logga in</button>
            </div>



        </div>

    </NotAuthorized>
</AuthorizeView>



@code
{

    private bool success, errors;
    private string email = string.Empty;
    private string password = string.Empty;
    private string[] errorList = [];

    public async Task DoLoginAsync()
    {
        success = errors = false;
        errorList = [];

        if (string.IsNullOrWhiteSpace(email))
        {
            errors = true;
            errorList = ["Email is required."];

            return;
        }

        if (string.IsNullOrWhiteSpace(password))
        {
            errors = true;
            errorList = ["Password is required."];

            return;
        }

        var result = await Acct.LoginAsync(email, password);

        if (result.Succeeded)
        {
            success = true;
            email = password = string.Empty;
        }
        else
        {
            errors = true;
            errorList = result.ErrorList;
        }

    }

}